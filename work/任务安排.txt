
1. 不支持同一个文件被重复迁移
2. 不记录文件迁移过程。



1. 其其他线程在处理同一个文件无冲突
2. 兼顾 发送Kafa失败，迁移失败的文件


1. 任务发送:移动对应目录，不考虑backend通知是否成功
2. 任务发送: 根据时间排序，最近n个记录发送同一节查重。
2. 任务处理：目录隔离无冲突。
3. 分发tick周期5秒，任务回收线程tick 80秒一次，不冲突

  
1. 与任务发送线程无冲突
2. 与Backend任务执行无冲突
3. 与任务回收线程无冲突

1. Backend迁移无冲突 2 其他2个线程无冲突

1. 与其他2个线程无冲突
2. 与Backend无冲突
3. 与管软故障无冲突


1. 任务发送:移动对应目录,只通知backend一次不重试
2. 任务处理：目录隔离无冲突。

1. 任务发送:移动对应目录，不考虑backend通知是否成功
2. 任务处理：目录隔离无冲突。
3. 分发tick周期5秒，任务回收线程tick 80秒一次 不冲突


1 与s3长连接初始化建立好，不选择其他可用节点
2. setxattr不支持同一任务被重复处理
3. 迁移过程无法上报

】
1. 目录隔离backend处理无冲突
2. tick周期不一样，与回收线程无冲突12

1. tick周期不一样，与其他线程无冲突
2. 只要移入对应目录，发送命令失败不迁移其他节点， Backend直接处理冲突
3. Backend直接处理冲突

1. 分发


1. 迁移：目录隔离backend处理无冲突
2. 分发
1. 任务重新处理
2. 任务积压线程处理

1. 通过目录和限制同时执行隔离 解决重复处理问题
2. 一个任务可用在单节点重复执行。
3. 任务积压检测线程 撤回任务。


1. 通知kafa迁移结果可能多/少
2. s3 提供偏移量迁移，不解决
  偏移量之外文件变化。


1 与s3长连接初始化建立好，不选择其他可用节点
2. setxattr不支持同一任务被重复处理

1 与s3长连接初始化建立好，不选择其他可用节点
2. setxattr不支持同一任务被重复处理

1. s3确认是否心跳检测接口
2. 失败时针对错误码(待协商)重写连接其他节点
3. 执行过程数据丢

1. s3确认是否心跳检测接口
2. 失败时针对错误码(待协商)重写连接其他节点

3. 任务发送时候 根据时间排序 连续5个任务发送同一个节点
4. 不记录处理结果，只记录失败结果，等待下次处理。
 
 
 1. 多节点同时重复迁移
 2. 不存储迁移整个过程。

1. 目录隔离backend处理无冲突
2. tick周期不一样，与回收线程无冲突



1. 任务重新处理。还原中间结果
2. 任务积压线程处理

1. 通知Kafa记录

1.不记录中间结果，一个任务 500个文件，重新迁移。
2. 


打破信息差，把英文内容翻译中文
1. github最新热门项目，例如 ai各种开源工具
2. github开源产品背后设计理解，解决问题
3. 参考阮一峰的周刊，最近每周科技新闻

1. 经验分享：被面试官问的哑口无言(背后原理架构底层东西)
2. 经验分享：手撕红黑树

面试时候
1. 在线ide/白板手写2个算法，然后执行出结果
2. 系统设计绘制架构图，并3-5句话描述问题是什么

打破信息差，把英文内容翻译中文
1. github最新热门项目，例如 ai各种开源工具
2. github开源产品背后设计理解，解决问题
3. 参考阮一峰的周刊，最近每周科技新闻

看榜样怎么做的
1. 在外包，电信落后行业 
2. 最新行业发展：容器调度， 
3.创业公司人员：发明什么产品，解决什么问题

看榜样(非偶像)在做什么
1. 公司里厉害的人
2. 国内技术人分享
3. 国外技术人分享


本月
1. 稳定性: 
   1.1 完成丢文件和错误码原因定位。同一个问题，管软产生了重复请求，Backend迁移重复请求
   1.2 确定解决办法, Backend单节点排重，管软保证多个请求产生不同任务,
   1.3 放到多节点迁移一块实现。

2. 性能：
  2.1. 写速度移动统计完成，自测环境未完成。
  2.2  s3/lib不会优化，改为多节点并发迁移
  2.3  通过多节点迁移完成优化。

3 多节点迁移
 3.1 高可用设计 --无 
 3.3 多节点方案--无 
 ==============================================================
 


 

 
---------------------------------------
多节点任务
稳定性：
性能：
并发：
--------------------------------------------
1. 高可用方案实现20%，
   梳理解决问题是什么，绘制任务分发和执行流程图
2. 稳定性：重复文件迁移问题定位，
           已经通知管软修改，backend单节点查重处理
3. 配额测试支持。

任务状态
无分配
已经分配
转移其他节点任务


01--host1--ip1--process
02--host2--ip2--process
03--host3--ip3--process
..............
07--host7--ip7--process


1.阅读文件锁概要设计问，了解宽限期概念
2. 了解worm类型文件宽限期命令设置。 

keepalived

1. 新领导如何选举
2. 新的领导如何处理上个领导剩余热吻你
主要问题是：

管软:   任务分发
Backend：任务执行


将文件从一个集群迁移到另外一个集群。

存在什么问题

1.任务分配： 
   部分服务故障后，管软新分配任务/已经分配无法转移到可用节点上
   如果单个节点执行 服务不可用，多个节点，相关任务丢失。
2. 

期望结果：
1.任务不遗漏
2.迁移正确，




Backend 只负责任务执行，
在故障情况下，一个Backend故障了，请求发送到另外一个Backend上。
假设：新的Backend不去处理






-----------------------------------------
主要把移动存力 方案讨论清楚，能讨论一点是一点 
多讨论几次，吸纳其他人建议
多讨论几次，吸纳其他人建议。
讨论前提，综合考虑。

---------------------------------------------------------------
其他问题暂时不考虑一下。


好的，最后一周看能不能多投入一些，有困难的话跟立晓反馈下，让他跟移动再沟通沟通~~





curl -XPUT http://10.20.30.40:9200/_cluster/settings -d'
{
    "transient" : {
      "logger.discovery ": "WARN"
    }
}'

http://www.lvesu.com/blog/es/logging.html


http://www.lvesu.com/blog/es/logging.html



1. 丢数据问题确认管软在并发情况下遗漏任务。
2. 高可用方案设计10%，整理需求。


福布斯行为模型 提供方法 和原理，
怎么组合整出100个案例来，普通人可能需要这个。相互监督
你说出美好一天就具体

什么懒人，必须服务到家 提供方法，提供例子还不行，还是体验，监督 反馈







别的同学都睡觉你起床这么干什么，简直自欺欺人，你是整个班级，整个公司起床最晚那个人。


我30分钟床衣服


讨论结论：
1.文件内部并发采用现有的offset+len接口，不使用分片上传接口；
2.rename接口，S3实现目标目录不存在时创建；
3.采用每个迁移线程一个连接的方式，实现迁移对端多节点并发接收数据；
4.当前不实现多迁移任务并发，后面实测下迁移效果；




rename


3月产生并发迁移优化思路，4月份实现一篇。




1. 构思文件并发迁移专利内容，本月无实现，下月开始实现一篇，
2. 为专利专员讲解上个专利内容，完成节点审批。
